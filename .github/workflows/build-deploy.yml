name: Deploy Helm Chart to EKS

on:
  workflow_dispatch:
    inputs:
      HELM_RELEASE_NAME:
        description: Helm release name
        required: true
        default: "java-web-app"
      AWS_REGION:
        description: AWS region
        required: true
        default: "us-east-1"
      EKS_CLUSTER_NAME:
        description: EKS cluster name
        required: true
        default: "eks-cluster"

permissions:
  id-token: write
  contents: read

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Placeholder for Build and Push Job
        # Replace this with your actual build and push logic
        run: echo "Simulating build and push step..."
        outputs:
          IMAGE_TAG_DEPLOY: "v1.0.0" # Replace with actual output from your build logic

  deploy-helm:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      # Step 1: Configure AWS credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::211125460769:role/GitHub-Actions
          aws-region: ${{ github.event.inputs.AWS_REGION }}

      # Step 2: Update kubeconfig for EKS
      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig \
            --region ${{ github.event.inputs.AWS_REGION }} \
            --name ${{ github.event.inputs.EKS_CLUSTER_NAME }} \
            --role-arn arn:aws:iam::211125460769:role/GitHub-Actions

      # Step 3: Clone Helm Chart Repository
      - name: Checkout Helm Chart Repository
        uses: actions/checkout@v2
        with:
          repository: madilshahzad/helm_charts
          ref: main

      # Step 4: Navigate to Helm Chart Directory
      - name: Navigate to Helm Chart Directory
        run: cd helm_charts/java-web-app

      # Step 5: Deploy Using Helm
      - name: Deploy Using Helm
        run: |
          helm upgrade --install ${{ github.event.inputs.HELM_RELEASE_NAME }} ./ \
            --set image.repository=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ github.event.inputs.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }} \
            --set image.tag=${{ needs.build-and-push.outputs.IMAGE_TAG_DEPLOY }}
